# IntelliJ Platform Artifacts Repositories -> https://plugins.jetbrains.com/docs/intellij/intellij-artifacts.html
pluginGroup=org.elixir_lang
pluginName=Elixir
pluginRepositoryUrl=https://github.com/KronicDeth/intellij-elixir/
pluginVersion=21.0.0
vendorName=Elle Imhoff
vendorEmail=Kronic.Deth@gmail.com
# https://youtrack.jetbrains.com/articles/IDEA-A-2100661899/IntelliJ-IDEA-2024.1-241.14494.240-build-Release-Notes
pluginSinceBuild=243.21565.180
pluginUntilBuild=
# Set this to open
runIdeWorkingDirectory=
# Define versions for running the IDEs, as each IDE can release at different release versions.
platformVersionIntellijIdeaCommunity=2024.3.2.2
platformVersionIntellijIdeaUltimate=2024.3.2.2
platformVersionRubyMine=2024.3
platformVersionPyCharmCommunity=2024.3
platformVersionPyCharmProfessional=2024.3
platformVersionWebStorm=2024.3

enableEAPIDEs=true
platformVersionIntellijIdeaCommunityEAP=251-EAP-SNAPSHOT
platformVersionIntellijIdeaUltimateEAP=251-EAP-SNAPSHOT
platformVersionPyCharmCommunityEAP=251-EAP-SNAPSHOT
platformVersionPyCharmProfessionalEAP=251-EAP-SNAPSHOT
platformVersionRubyMineEAP=251-EAP-SNAPSHOT
platformVersionWebStormEAP=251-EAP-SNAPSHOT
# Comma-separated list of platforms to include
platformsList=IntellijIdeaCommunity,IntellijIdeaUltimate,RubyMine,PyCharmCommunity,PyCharmProfessional,WebStorm
# The versions we target, 21 is needed for IntelliJ Plugins
javaVersion=21
javaTargetVersion=21
# Defined in `.tool-versions`, check via `elixir --version`
elixirVersion=1.13.4
# IntelliJ Platform Properties -> https://plugins.jetbrains.com/docs/intellij/tools-gradle-intellij-plugin.html#configuration-intellij-extension
# Target IntelliJ Community by default
platformType=IC
platformVersion=2024.3
# Plugin Dependencies -> https://plugins.jetbrains.com/docs/intellij/plugin-dependencies.html
# Example: platformPlugins = com.jetbrains.php:203.4449.22, org.intellij.scala:2023.3.27@EAP
# https://plugins.jetbrains.com/plugin/24468-classic-ui
# https://plugins.jetbrains.com/plugin/7641-action-tracker - Act
# https://plugins.jetbrains.com/plugin/15104-ide-perf - IDE Performande
# https://plugins.jetbrains.com/plugin/227-psiviewer - View PSI
platformPlugins = PsiViewer:243.7768, com.google.ide-perf:1.3.2, org.jetbrains.action-tracker:0.3.3, com.intellij.classic.ui:243.21565.122,krasa.CpuUsageIndicator:1.18.0-IJ2023
# Example: platformBundledPlugins = com.intellij.java
# We need com.intellij.java to compile JPS, and markdown.
platformBundledPlugins=org.intellij.plugins.markdown,com.intellij.java
# Gradle Releases -> https://github.com/gradle/gradle/releases
# 8.5 is set because newer versions have weird run time caching issues, even with caching turned off.
# See https://github.com/gradle/gradle/issues/28974
gradleVersion=8.14.3
publishChannels=canary
runIdePlugins=IdeaVim:2.16.0
# These must be set, or Out of Memory (OOM) errors will occur during compiling.
org.gradle.jvmargs=-Xmx4096m
kotlin.daemon.jvmargs=-Xmx4906m
# @todo Once this has been tested to be stable with the intellij-elixir codebase, enable.
# Others have it on without issues, so I'm not overly worried - just want to confirm stability.
# Can always just turn it off for CI.
# Before this, we need to upgrade download and fix the outputs for the tasks to ensure they cache.
# Gradle Configuration Cache - https://docs.gradle.org/current/userguide/configuration_cache.html
# Gradle Build Cache - https://docs.gradle.org/current/userguide/build_cache.html
# Parallel Gradle Builds - https://docs.gradle.org/current/userguide/performance.html#parallel_execution
org.gradle.configuration-cache=false
org.gradle.caching=false
org.gradle.parallel=false
