name: Release

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          otp-version: 22.2
          elixir-version: 1.7.4
      - name: Export OTP_RELEASE
        run: echo "::set-env name=OTP_RELEASE::22.2"
      - name: Export ERLANG_SDK_HOME
        run: echo "::set-env name=ERLANG_SDK_HOME::`erl -eval 'io:format("~s", [code:root_dir()]).' -noshell -run init stop`"
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Compile Tests with Gradle
        run: ./gradlew --stacktrace compileTestJava
      - name: Get Elixir Source
        run: ./gradlew --stacktrace getElixir
      - name: Release Quoter
        run: ./gradlew --stacktrace releaseQuoter
      - name: Test with Gradle
        run: ./gradlew --stacktrace test
  release:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew buildPlugin
      - name: Export ASSET_PATH
        run: echo "::set-env name=ASSET_PATH::`ls -1 build/distributions/intellij-elixir-*.zip`"
      - name: Export ASSET_NAME
        run: echo "::set-env name=ASSET_NAME::${ASSET_PATH#build/distributions/}"
      - name: Export TAG
        run: |
          version_suffix_zip=${ASSET_NAME#intellij-elixir-}
          echo "::set-env name=TAG::v${version_suffix_zip%.zip}"
      - name: Tag Commit
        uses: hole19/git-tag-action@master
        env:
          # TAG set above with `set-env name=TAG`
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: ${{ env.TAG }}
          prerelease: true
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ASSET_PATH }}
          asset_name: ${{ env.ASSET_NAME }}
          asset_content_type: application/zip
      - name: Publish
        env:
          JET_BRAINS_MARKETPLACE_TOKEN: ${{ secrets.JetBrainsMarketplaceToken }}
        run: ./gradlew --stacktrace publishPlugin
